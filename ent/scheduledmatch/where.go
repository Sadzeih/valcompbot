// Code generated by ent, DO NOT EDIT.

package scheduledmatch

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/Sadzeih/valcompbot/ent/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldLTE(FieldID, id))
}

// MatchID applies equality check predicate on the "match_id" field. It's identical to MatchIDEQ.
func MatchID(v string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldEQ(FieldMatchID, v))
}

// DoneAt applies equality check predicate on the "done_at" field. It's identical to DoneAtEQ.
func DoneAt(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldEQ(FieldDoneAt, v))
}

// PostedAt applies equality check predicate on the "posted_at" field. It's identical to PostedAtEQ.
func PostedAt(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldEQ(FieldPostedAt, v))
}

// MatchIDEQ applies the EQ predicate on the "match_id" field.
func MatchIDEQ(v string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldEQ(FieldMatchID, v))
}

// MatchIDNEQ applies the NEQ predicate on the "match_id" field.
func MatchIDNEQ(v string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldNEQ(FieldMatchID, v))
}

// MatchIDIn applies the In predicate on the "match_id" field.
func MatchIDIn(vs ...string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldIn(FieldMatchID, vs...))
}

// MatchIDNotIn applies the NotIn predicate on the "match_id" field.
func MatchIDNotIn(vs ...string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldNotIn(FieldMatchID, vs...))
}

// MatchIDGT applies the GT predicate on the "match_id" field.
func MatchIDGT(v string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldGT(FieldMatchID, v))
}

// MatchIDGTE applies the GTE predicate on the "match_id" field.
func MatchIDGTE(v string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldGTE(FieldMatchID, v))
}

// MatchIDLT applies the LT predicate on the "match_id" field.
func MatchIDLT(v string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldLT(FieldMatchID, v))
}

// MatchIDLTE applies the LTE predicate on the "match_id" field.
func MatchIDLTE(v string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldLTE(FieldMatchID, v))
}

// MatchIDContains applies the Contains predicate on the "match_id" field.
func MatchIDContains(v string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldContains(FieldMatchID, v))
}

// MatchIDHasPrefix applies the HasPrefix predicate on the "match_id" field.
func MatchIDHasPrefix(v string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldHasPrefix(FieldMatchID, v))
}

// MatchIDHasSuffix applies the HasSuffix predicate on the "match_id" field.
func MatchIDHasSuffix(v string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldHasSuffix(FieldMatchID, v))
}

// MatchIDEqualFold applies the EqualFold predicate on the "match_id" field.
func MatchIDEqualFold(v string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldEqualFold(FieldMatchID, v))
}

// MatchIDContainsFold applies the ContainsFold predicate on the "match_id" field.
func MatchIDContainsFold(v string) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldContainsFold(FieldMatchID, v))
}

// DoneAtEQ applies the EQ predicate on the "done_at" field.
func DoneAtEQ(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldEQ(FieldDoneAt, v))
}

// DoneAtNEQ applies the NEQ predicate on the "done_at" field.
func DoneAtNEQ(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldNEQ(FieldDoneAt, v))
}

// DoneAtIn applies the In predicate on the "done_at" field.
func DoneAtIn(vs ...time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldIn(FieldDoneAt, vs...))
}

// DoneAtNotIn applies the NotIn predicate on the "done_at" field.
func DoneAtNotIn(vs ...time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldNotIn(FieldDoneAt, vs...))
}

// DoneAtGT applies the GT predicate on the "done_at" field.
func DoneAtGT(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldGT(FieldDoneAt, v))
}

// DoneAtGTE applies the GTE predicate on the "done_at" field.
func DoneAtGTE(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldGTE(FieldDoneAt, v))
}

// DoneAtLT applies the LT predicate on the "done_at" field.
func DoneAtLT(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldLT(FieldDoneAt, v))
}

// DoneAtLTE applies the LTE predicate on the "done_at" field.
func DoneAtLTE(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldLTE(FieldDoneAt, v))
}

// DoneAtIsNil applies the IsNil predicate on the "done_at" field.
func DoneAtIsNil() predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldIsNull(FieldDoneAt))
}

// DoneAtNotNil applies the NotNil predicate on the "done_at" field.
func DoneAtNotNil() predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldNotNull(FieldDoneAt))
}

// PostedAtEQ applies the EQ predicate on the "posted_at" field.
func PostedAtEQ(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldEQ(FieldPostedAt, v))
}

// PostedAtNEQ applies the NEQ predicate on the "posted_at" field.
func PostedAtNEQ(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldNEQ(FieldPostedAt, v))
}

// PostedAtIn applies the In predicate on the "posted_at" field.
func PostedAtIn(vs ...time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldIn(FieldPostedAt, vs...))
}

// PostedAtNotIn applies the NotIn predicate on the "posted_at" field.
func PostedAtNotIn(vs ...time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldNotIn(FieldPostedAt, vs...))
}

// PostedAtGT applies the GT predicate on the "posted_at" field.
func PostedAtGT(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldGT(FieldPostedAt, v))
}

// PostedAtGTE applies the GTE predicate on the "posted_at" field.
func PostedAtGTE(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldGTE(FieldPostedAt, v))
}

// PostedAtLT applies the LT predicate on the "posted_at" field.
func PostedAtLT(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldLT(FieldPostedAt, v))
}

// PostedAtLTE applies the LTE predicate on the "posted_at" field.
func PostedAtLTE(v time.Time) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldLTE(FieldPostedAt, v))
}

// PostedAtIsNil applies the IsNil predicate on the "posted_at" field.
func PostedAtIsNil() predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldIsNull(FieldPostedAt))
}

// PostedAtNotNil applies the NotNil predicate on the "posted_at" field.
func PostedAtNotNil() predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.FieldNotNull(FieldPostedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ScheduledMatch) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ScheduledMatch) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ScheduledMatch) predicate.ScheduledMatch {
	return predicate.ScheduledMatch(sql.NotPredicates(p))
}
