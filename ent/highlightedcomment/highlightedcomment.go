// Code generated by ent, DO NOT EDIT.

package highlightedcomment

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the highlightedcomment type in the database.
	Label = "highlighted_comment"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "oid"
	// FieldCommentID holds the string denoting the comment_id field in the database.
	FieldCommentID = "comment_id"
	// FieldBody holds the string denoting the body field in the database.
	FieldBody = "body"
	// FieldAuthor holds the string denoting the author field in the database.
	FieldAuthor = "author"
	// FieldAuthorRole holds the string denoting the author_role field in the database.
	FieldAuthorRole = "author_role"
	// FieldParentID holds the string denoting the parent_id field in the database.
	FieldParentID = "parent_id"
	// FieldLink holds the string denoting the link field in the database.
	FieldLink = "link"
	// FieldAuthorType holds the string denoting the author_type field in the database.
	FieldAuthorType = "author_type"
	// Table holds the table name of the highlightedcomment in the database.
	Table = "highlighted_comments"
)

// Columns holds all SQL columns for highlightedcomment fields.
var Columns = []string{
	FieldID,
	FieldCommentID,
	FieldBody,
	FieldAuthor,
	FieldAuthorRole,
	FieldParentID,
	FieldLink,
	FieldAuthorType,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
